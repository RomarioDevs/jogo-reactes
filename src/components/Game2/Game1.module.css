.gameContainer {
    margin: 1.5rem 13rem;
    display: flex;
    justify-content: center;
    gap: 5rem;
    align-items: center;
    height: auto;
    width: 80%;
    padding: 0 2rem;
    border: 2px solid #ccc;
  }
  
  .controls {
    display: flex;
    flex-direction: column;
    align-items: center;
  }
  
  .controls > div {
    margin-bottom: 1rem;
  }
  
  .inputWrapper {
    justify-items: center;
    display: flex;
    align-items: center;
    border: #007bff solid 1px;
  }
  
  .inputCircle {
    width: 5rem;
    height: 5rem;
    border-radius: 50%;
    text-align: center;
    font-size: 3rem;
    padding: 0;
    margin: 1rem;
  }
  
  .inputButtons {
    margin: 1rem;
    border-radius: 10%;
    width: 6rem;
    height: 3rem;
    font-size: 2rem;
    cursor: pointer;
    background-color: #007bff;
    transition: 0.5s;
  }
  
  .button2 {
    margin-top: 0.5rem;
    border-radius: 5px;
    width: 10rem;
    height: 4rem;
    font-size: 2rem;
    cursor: pointer;
    background-color: #007bff;
    transition: 0.5s;
  }
  
  .button2:hover {
    background-color: aqua;
  }
  
  .grid {
    display: grid;
    grid-template-columns: repeat(5, 150px);
    grid-template-rows: repeat(6, 150px);
    gap: 3px;
  }
  
  .square {
    width: 150px;
    height: 150px;
    border: 1px solid #007bff;
  }
  

  .innerSquare {
    width: calc(100% - 2px);
    height: calc(100% - 2px);
    background-color: inherit;
  }

  .rodas{
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
  }

  .rodas p{
    font-size: 2rem;

  }



  
  /*  const squares = squareColors.map((color, index) => (
    <div key={index} className={styles.square} style={{ borderColor: color }}>
      {color !== '#ffffff' && <div className={styles.innerSquare} style={{ backgroundColor: color }}></div>}
    </div>
  ));
   */